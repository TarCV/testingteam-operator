/*
 * Copyright 2020 TarCV
 * Copyright 2015 Shazam Entertainment Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'project-report'


java {
    sourceCompatibility = javaSourceCompatibility
    targetCompatibility = javaTargetCompatibility
}

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    implementation project(':tongs-runner')
    compileOnly "com.android.tools.build:gradle:${versions.androidPlugin}"
}

jar {
    manifest {
        attributes 'Implementation-Title': POM_NAME,
                'Implementation-Version': VERSION_NAME,
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Built-Gradle': gradle.gradleVersion
    }
}

tasks.register('writeBuildConfig', DefaultTask.class) { task ->
    def baseOutputDir = "${project.buildDir}/generated/sources/buildConfig"
    group = 'build'
    description = 'Generates BuildConfig.groovy'

    inputs.property("Project version name", {
        return project.VERSION_NAME
    })
    outputs.dir(baseOutputDir)
    sourceSets.main.groovy.srcDir file(baseOutputDir)
            
    doLast {
        def packageOutputDir = "$baseOutputDir/com/github/tarcv/tongs/gradle"
        if (!file(packageOutputDir).isDirectory() && !file(packageOutputDir).mkdirs()) {
            throw new IOException('Failed to create output directory')
        }
        
        file("$packageOutputDir/BuildConfig.groovy").write("""
package com.github.tarcv.tongs.gradle

class BuildConfig {
    final static String PLUGIN_VERSION = "${project.VERSION_NAME}" 
}
""")
    }
}
compileGroovy.dependsOn('writeBuildConfig')
