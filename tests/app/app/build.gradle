apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.tarcv.tongs'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.tarcv.tongstestapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments test_argument: 'default'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "flavor"
    productFlavors {
        f1 {
            dimension "flavor"
            applicationIdSuffix ".f1"
        }
        f2 {
            dimension "flavor"
            applicationIdSuffix ".f2"
            testInstrumentationRunner "com.github.tarcv.test.f2.TestRunner"
            testInstrumentationRunnerArguments test_argument: 'args\"ForF2', filter: 'com.github.tarcv.test.F2Filter'
        }
    }

    splits {
        density {
            enable true

            reset()
            include "420dpi", "xxhdpi"
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation group: 'org.json', name: 'json', version: '20180130'
    testImplementation('org.jetbrains.kotlin:kotlin-test-junit') {
        exclude group: 'org.hamcrest'
    }
    testImplementation group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2' // has different versioning
    androidTestImplementation "androidx.test:core:$testVersion"
    androidTestImplementation "androidx.test:rules:$testVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    if (Boolean.valueOf(System.getenv("CI_NO_ONDEVICE"))) {
        androidTestCompileOnly 'com.github.TarCV.testingteam-operator:tongs-ondevice'
    } else {
        androidTestImplementation 'com.github.TarCV.testingteam-operator:tongs-ondevice'
    }
}

tongs {
    title = "Acceptance tests"

    testPackage = "com.github.tarcv.test"

    totalAllowedRetryQuota = 4
    retryPerTestCaseQuota = 2

    poolingStrategy {
        manual {
            groupings {
                emulators = [System.getenv("DEVICE1"), System.getenv("DEVICE2")]
            }
        }
    }

    if (Boolean.valueOf(System.getenv("CI_STUBBED"))) {
        plugins = ["com.github.tarcv.tongs.plugin.android.StubDeviceProviderFactory"]
    }

    tongsIntegrationTestRunType = Boolean.valueOf(System.getenv("CI_STUBBED"))
            ? "STUB_PARALLEL_TESTRUN"
            : "RECORD_LISTENER_EVENTS"
}
